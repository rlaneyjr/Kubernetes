version: '3'
services:
  netbox: &netbox
    build:
      context: .
    image: rleastusacr.azurecr.io/netbox:v3
    depends_on:
    - postgres
    - redis
    - netbox-worker
    environment:
      - DB_NAME=netbox
      - DB_USER=netbox
      - DB_PASSWORD=AjsIG2fUvR
      - DB_HOST=postgres
      - EMAIL_SERVER=https://outlook.office365.com/owa/?realm=hearst.com
      - EMAIL_PORT=25
      - EMAIL_USERNAME=rlaney
      - EMAIL_PASSWORD=FunckyColdMadina22$$
      - EMAIL_TIMEOUT=5
      - EMAIL_FROM=rlaney@hearstsc.com
      - MEDIA_ROOT=/opt/netbox/netbox/media
      - NAPALM_USERNAME=rlaney
      - NAPALM_PASSWORD=FunckyColdMadina22$$
      - NAPALM_TIMEOUT=10
      - MAX_PAGE_SIZE=0
      - SECRET_KEY=JVBMvt0VFvFArYciKZdN6x0A42cljCeG
      - SUPERUSER_NAME=rlaney
      - SUPERUSER_EMAIL=rlaney@hearstsc.com
      - SUPERUSER_PASSWORD=ralrox22
      - SUPERUSER_API_TOKEN=66b1b301d87e22ea3175b38d5d01d8757
    volumes:
    - ./startup_scripts:/opt/netbox/startup_scripts:ro
    - ./initializers:/opt/netbox/initializers:ro
    - ./configuration:/etc/netbox/config:ro
    - netbox-nginx-config:/etc/netbox-nginx/
    - netbox-static-files:/opt/netbox/netbox/static
    - netbox-media-files:/opt/netbox/netbox/media
    - netbox-report-files:/etc/netbox/reports:ro
  netbox-worker:
    <<: *netbox
    depends_on:
    - redis
    entrypoint:
    - python3
    - /opt/netbox/netbox/manage.py
    command:
    - rqworker
  nginx:
    command: nginx -c /etc/netbox-nginx/nginx.conf
    image: nginx:1.15-alpine
    depends_on:
    - netbox
    ports:
    - 8080
    deploy:
      replicas: 2
      restart_policy:
        condition: any
    labels:
      kompose.service.expose: "htsaks1.eastus.cloudapp.azure.com"
    volumes:
    - netbox-static-files:/opt/netbox/netbox/static:ro
    - netbox-nginx-config:/etc/netbox-nginx/:ro
  postgres:
    image: postgres:10.4-alpine
    environment:
      - POSTGRES_USER=netbox
      - POSTGRES_PASSWORD=AjsIG2fUvR
      - POSTGRES_DB=netbox
    ports:
      - 5432
    deploy:
      replicas: 2
      restart_policy:
        condition: any
    labels:
      kompose.service.type: NodePort
    volumes:
    - netbox-postgres-data:/var/lib/postgresql/data
  redis:
    image: redis:4-alpine
    command:
    - sh
    - -c # this is to evaluate the $REDIS_PASSWORD from the env
    - redis-server --appendonly yes --requirepass $$REDIS_PASSWORD ## $$ because of docker-compose
    environment:
      - WEBHOOKS_ENABLED=True
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=AjsIG2fUvR
      - REDIS_DB=0
      - REDIS_DT=300
    ports:
      - 6379
    deploy:
      replicas: 2
      restart_policy:
        condition: any
    labels:
      kompose.service.type: NodePort
    volumes:
    - netbox-redis-data:/data
volumes:
  netbox-static-files:
    driver: local
  netbox-nginx-config:
    driver: local
  netbox-media-files:
    driver: local
  netbox-report-files:
    driver: local
  netbox-postgres-data:
    driver: local
  netbox-redis-data:
    driver: local
